<?xml version="1.0" encoding="UTF-8"?>
<project name="DirsetBuild" default="cobolbuild" basedir="" xmlns:ac="antlib:net.sf.antcontrib">
	<taskdef resource="com/microfocus/ant/antlib.xml"/>
	<!--  ***********************************  -->
	<!--  * General property initialisation *  -->
	<!--  ***********************************  -->
	<property name="loaddir" value=""/>
	<property name="pathVar.PROJECT_LOC" value="${basedir}"/>
	<property environment="env"/>
	<property name="DirsetBuild" value="${basedir}/copybook"/>
	<property name="cfg" value="New_Configuration"/>
	<property name="cfgtarget" value="cfg.${cfg}"/>
	<property name="forceCompile" value="true"/>
	<property name="buildThreadCount" value="2"/>
	<property name="failOnError" value="false"/>
	<property name="cobolFailOnError" value="true"/>
	<property name="cobollinkFailOnError" value="${failOnError}"/>
	<property name="bmsFailOnError" value="${failOnError}"/>
	<!--<property name="progname" value =""/> -->

	<!--  ******************************  -->
	<!--  * OS-specific initialisation *  -->
	<!--  ******************************  -->
	<condition property="windows">
		<os family="windows"/>
	</condition>
	<condition property="unix">
		<os family="unix"/>
	</condition>
	<ac:if>
		<isset property="windows"/>
		<then>
			<property name="dllext" value="dll"/>
			<property name="exeext" value="exe"/>
			<property name="objext" value=".obj"/>
			<property name="equalsInDir" value="="/>
			<property name="pathVar.pS" value=";"/>
			<property name="shell" value="cmd"/>
			<property name="shell.ext" value=".bat"/>
			<property name="shell.arg" value="/c"/>
			<property name="script.header" value="@rem MS-DOS Batch File"/>
		</then>
	</ac:if>
	<ac:if>
		<isset property="unix"/>
		<then>
			<property name="dllext" value="so"/>
			<property name="exeext" value=""/>
			<property name="objext" value=".o"/>
			<property name="equalsInDir" value="="/>
			<property name="pathVar.pS" value=":"/>
			<property name="shell" value="sh"/>
			<property name="shell.ext" value=".sh"/>
			<property name="shell.arg" value="-c"/>
			<property name="script.header" value="#!/bin/sh"/>
		</then>
	</ac:if>

	<!--  **********************  -->
	<!--  * COBOL source files *  -->
	<!--  **********************  -->
	<!-- cobol_file_set_1 -->
	<fileset dir="${basedir}" id="cobol_file_set_1">
		<include name="**/${progname}${progext}"/>
	</fileset>
	
	
	<!-- **************** -->
	<!-- * Object files * -->
	<!-- **************** -->
	<!-- Default -->
	<fileset dir="${loaddir}" id="cobol.default.object.files.New Configuration">
		<include name="*${objext}"/>
	</fileset>
	
	<!-- COBOL copybook locations -->
	<mffilelist id="cobol.copybook.locations">
		<path type="copybook" name="${DirsetBuild}"/>
	</mffilelist>

	<!--  *************************  -->
	<!--  * Configuration targets *  -->
	<!--  *************************  -->
	<!-- cfg.New_Configuration -->
	<target name="cobolbuild.cfg.New_Configuration" depends="nature.specific.build.cfg.New_Configuration"/>
	<target name="nature.specific.build.cfg.New_Configuration" depends="cobol.cfg.New_Configuration"/>
	<target name="cobol.cfg.New_Configuration" depends="cobol.compile.cfg.New_Configuration,cobol.link.cfg.New_Configuration"/>
	
	<target name="cobol.compile.cfg.New_Configuration">
		<cobol verbose="true" debug="true" configuration="New Configuration" settingsDir=".settings" useDirectiveSet="true" threadedRts="false" destdir="${loaddir}" is64bit="false" failonerror="${cobolFailOnError}" forceCompile="${forceCompile}">
			<!--mffilelist refid="cobol.copybook.locations"/> -->
			<fileset refid="cobol_file_set_1"/>
		</cobol>
	</target>
	<target name="cobol.link.cfg.New_Configuration">
		<path id="objects.path">
			<fileset refid="cobol.default.object.files.New Configuration"/>
		</path>
		<foreach target="cobol.link.file" param="ObjName">
			<path refid="objects.path"/>
		</foreach>
	</target>
	
	<target name="cobol.link.file">                 
        <propertyregex input="${ObjName}" regexp="((.*[\\/])*)([^\.]*)\..*" select="\3" property="basename" casesensitive="false" override="true"/>
        <cobollink objectfile="${ObjName}" entrypoint="" sharedRts="true" destfile="${basename}" destdir="${loaddir}" is64bit="false" failonerror="${cobollinkFailOnError}" desttype="${dllext}" threadedRts="false">
        </cobollink>
    </target>

	<target name="clean.cfg.New_Configuration">
		<delete file="${loaddir}/DirsetBuild.lbr"/>
		<cobolclean debug="true" destdir="${loaddir}" desttype="{$dllext}">
			<mffilelist refid="cobol_file_set_1"/>
		</cobolclean>
		<cobolclean destdir="${loaddir}" desttype="{$dllext}">
			<mffilelist>
				<file name="DirsetBuild"/>
			</mffilelist>
		</cobolclean>
	</target>
	<!--  *******************  -->
	<!--  * General targets *  -->
	<!--  *******************  -->
	<target name="clean">
		<antcall target="clean.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="cobolbuild">
		<antcall target="cobolbuild.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="cobollink">
		<antcall target="cobol.link.${cfgtarget}" inheritAll="true"/>
	</target>
</project>
